La pagination d'un tableau dans un dashboard PHP consiste à diviser un grand ensemble de données en pages plus petites afin de faciliter la lecture et la navigation. Voici comment vous pouvez implémenter la pagination pour un tableau en PHP :

### Étape 1 : Préparer les données

Supposons que vous avez un tableau de données stocké dans une base de données MySQL. Vous devez d'abord établir une connexion à la base de données et récupérer les données.

```php
<?php
// Connexion à la base de données
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "nom_de_la_base";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Échec de la connexion : " . $conn->connect_error);
}

// Déterminer le nombre total de résultats
$sql = "SELECT COUNT(*) AS total FROM votre_table";
$result = $conn->query($sql);
$row = $result->fetch_assoc();
$total_results = $row['total'];
?>
```

### Étape 2 : Configurer la pagination

Déterminez le nombre de résultats par page et calculez le nombre total de pages nécessaires.

```php
<?php
$results_per_page = 10; // Nombre de résultats par page
$total_pages = ceil($total_results / $results_per_page); // Nombre total de pages

// Déterminer la page courante
$current_page = isset($_GET['page']) ? (int)$_GET['page'] : 1;
if ($current_page < 1) {
    $current_page = 1;
} elseif ($current_page > $total_pages) {
    $current_page = $total_pages;
}

// Calculer le premier résultat de la page
$start_from = ($current_page - 1) * $results_per_page;
?>
```

### Étape 3 : Récupérer les résultats pour la page actuelle

Modifiez votre requête SQL pour récupérer uniquement les résultats pour la page courante.

```php
<?php
$sql = "SELECT * FROM votre_table LIMIT $start_from, $results_per_page";
$result = $conn->query($sql);
?>
```

### Étape 4 : Afficher les résultats

Affichez les résultats dans un tableau HTML.

```php
<?php
echo "<table>
<tr><th>Colonne 1</th><th>Colonne 2</th></tr>";

while($row = $result->fetch_assoc()) {
    echo "<tr><td>" . $row['colonne1'] . "</td><td>" . $row['colonne2'] . "</td></tr>";
}
echo "</table>";
?>
```

### Étape 5 : Afficher les liens de pagination

Ajoutez des liens de pagination pour permettre la navigation entre les pages.

```php
<?php
echo "<div class='pagination'>";
if ($current_page > 1) {
    echo "<a href='?page=" . ($current_page - 1) . "'>Précédent</a> ";
}

for ($i = 1; $i <= $total_pages; $i++) {
    if ($i == $current_page) {
        echo "<a class='active'>$i</a> ";
    } else {
        echo "<a href='?page=$i'>$i</a> ";
    }
}

if ($current_page < $total_pages) {
    echo "<a href='?page=" . ($current_page + 1) . "'>Suivant</a>";
}
echo "</div>";
?>
```

### Exemple complet

Voici un exemple complet combinant toutes les étapes ci-dessus :

```php
<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "nom_de_la_base";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Échec de la connexion : " . $conn->connect_error);
}

$sql = "SELECT COUNT(*) AS total FROM votre_table";
$result = $conn->query($sql);
$row = $result->fetch_assoc();
$total_results = $row['total'];

$results_per_page = 10;
$total_pages = ceil($total_results / $results_per_page);

$current_page = isset($_GET['page']) ? (int)$_GET['page'] : 1;
if ($current_page < 1) {
    $current_page = 1;
} elseif ($current_page > $total_pages) {
    $current_page = $total_pages;
}

$start_from = ($current_page - 1) * $results_per_page;

$sql = "SELECT * FROM votre_table LIMIT $start_from, $results_per_page";
$result = $conn->query($sql);

echo "<table>
<tr><th>Colonne 1</th><th>Colonne 2</th></tr>";

while($row = $result->fetch_assoc()) {
    echo "<tr><td>" . $row['colonne1'] . "</td><td>" . $row['colonne2'] . "</td></tr>";
}
echo "</table>";

echo "<div class='pagination'>";
if ($current_page > 1) {
    echo "<a href='?page=" . ($current_page - 1) . "'>Précédent</a> ";
}

for ($i = 1; $i <= $total_pages; $i++) {
    if ($i == $current_page) {
        echo "<a class='active'>$i</a> ";
    } else {
        echo "<a href='?page=$i'>$i</a> ";
    }
}

if ($current_page < $total_pages) {
    echo "<a href='?page=" . ($current_page + 1) . "'>Suivant</a>";
}
echo "</div>";

$conn->close();
?>
```

### CSS pour la pagination

Ajoutez un peu de CSS pour styliser les liens de pagination :

```css
<style>
.pagination a {
    color: black;
    float: left;
    padding: 8px 16px;
    text-decoration: none;
}

.pagination a.active {
    background-color: #4CAF50;
    color: white;
}

.pagination a:hover:not(.active) {
    background-color: #ddd;
}
</style>
```

En intégrant ce code CSS dans votre fichier PHP ou dans un fichier CSS séparé, vos liens de pagination seront mieux présentés et plus agréables à utiliser.