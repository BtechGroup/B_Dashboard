Pour gérer la pagination en comptant le nombre de lignes retournées par la requête, vous pouvez suivre une approche similaire à celle décrite précédemment, mais avec quelques ajustements pour calculer le nombre total de pages basé sur le nombre de lignes retournées par une requête de sélection.

### Étape 1 : Préparer les données et configurer la pagination

Tout d'abord, vous devez récupérer toutes les lignes et déterminer le nombre total de pages en fonction du nombre de lignes par page. Voici un exemple de code :

```php
<?php
// Connexion à la base de données
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "nom_de_la_base";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Échec de la connexion : " . $conn->connect_error);
}

$results_per_page = 10; // Nombre de résultats par page

// Récupérer toutes les lignes
$sql = "SELECT * FROM votre_table";
$result = $conn->query($sql);
$total_results = $result->num_rows;

// Déterminer le nombre total de pages
$total_pages = ceil($total_results / $results_per_page);

// Déterminer la page courante
$current_page = isset($_GET['page']) ? (int)$_GET['page'] : 1;
if ($current_page < 1) {
    $current_page = 1;
} elseif ($current_page > $total_pages) {
    $current_page = $total_pages;
}

// Calculer le premier résultat de la page
$start_from = ($current_page - 1) * $results_per_page;

// Récupérer les résultats pour la page actuelle
$sql = "SELECT * FROM votre_table LIMIT $start_from, $results_per_page";
$result = $conn->query($sql);
?>
```

### Étape 2 : Afficher les résultats

Affichez les résultats dans un tableau HTML :

```php
<?php
echo "<table>
<tr><th>Colonne 1</th><th>Colonne 2</th></tr>";

while($row = $result->fetch_assoc()) {
    echo "<tr><td>" . $row['colonne1'] . "</td><td>" . $row['colonne2'] . "</td></tr>";
}
echo "</table>";
?>
```

### Étape 3 : Afficher les liens de pagination

Ajoutez des liens de pagination pour permettre la navigation entre les pages :

```php
<?php
echo "<div class='pagination'>";
if ($current_page > 1) {
    echo "<a href='?page=" . ($current_page - 1) . "'>Précédent</a> ";
}

for ($i = 1; $i <= $total_pages; $i++) {
    if ($i == $current_page) {
        echo "<a class='active'>$i</a> ";
    } else {
        echo "<a href='?page=$i'>$i</a> ";
    }
}

if ($current_page < $total_pages) {
    echo "<a href='?page=" . ($current_page + 1) . "'>Suivant</a>";
}
echo "</div>";

$conn->close();
?>
```

### Exemple complet

Voici un exemple complet combinant toutes les étapes ci-dessus :

```php
<?php
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "nom_de_la_base";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Échec de la connexion : " . $conn->connect_error);
}

$results_per_page = 10;

$sql = "SELECT * FROM votre_table";
$result = $conn->query($sql);
$total_results = $result->num_rows;

$total_pages = ceil($total_results / $results_per_page);

$current_page = isset($_GET['page']) ? (int)$_GET['page'] : 1;
if ($current_page < 1) {
    $current_page = 1;
} elseif ($current_page > $total_pages) {
    $current_page = $total_pages;
}

$start_from = ($current_page - 1) * $results_per_page;

$sql = "SELECT * FROM votre_table LIMIT $start_from, $results_per_page";
$result = $conn->query($sql);

echo "<table>
<tr><th>Colonne 1</th><th>Colonne 2</th></tr>";

while($row = $result->fetch_assoc()) {
    echo "<tr><td>" . $row['colonne1'] . "</td><td>" . $row['colonne2'] . "</td></tr>";
}
echo "</table>";

echo "<div class='pagination'>";
if ($current_page > 1) {
    echo "<a href='?page=" . ($current_page - 1) . "'>Précédent</a> ";
}

for ($i = 1; $i <= $total_pages; $i++) {
    if ($i == $current_page) {
        echo "<a class='active'>$i</a> ";
    } else {
        echo "<a href='?page=$i'>$i</a> ";
    }
}

if ($current_page < $total_pages) {
    echo "<a href='?page=" . ($current_page + 1) . "'>Suivant</a>";
}
echo "</div>";

$conn->close();
?>
```

### CSS pour la pagination

Ajoutez un peu de CSS pour styliser les liens de pagination :

```css
<style>
.pagination a {
    color: black;
    float: left;
    padding: 8px 16px;
    text-decoration: none;
}

.pagination a.active {
    background-color: #4CAF50;
    color: white;
}

.pagination a:hover:not(.active) {
    background-color: #ddd;
}
</style>
```

En utilisant ce code CSS dans votre fichier PHP ou dans un fichier CSS séparé, vous pouvez améliorer la présentation et l'interactivité de vos liens de pagination.